package com.akmade.security.data;
// Generated Oct 22, 2016 7:06:32 AM by Hibernate Tools 5.2.0.Beta1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * UserCompany generated by hbm2java
 */
@Entity
@Table(name = "user_company", catalog = "security")
public class UserCompany implements java.io.Serializable {

	private int userId;
	private Company company;
	private User user;
	private boolean administrative;
	private boolean primary;
	private boolean billing;
	private Date createdDate;
	private Date lastmodifiedDate;

	public UserCompany() {
	}

	public UserCompany(Company company, User user, boolean administrative, boolean primary, boolean billing) {
		this.company = company;
		this.user = user;
		this.administrative = administrative;
		this.primary = primary;
		this.billing = billing;
	}

	public UserCompany(Company company, User user, boolean administrative, boolean primary, boolean billing,
			Date createdDate, Date lastmodifiedDate) {
		this.company = company;
		this.user = user;
		this.administrative = administrative;
		this.primary = primary;
		this.billing = billing;
		this.createdDate = createdDate;
		this.lastmodifiedDate = lastmodifiedDate;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "user"))
	@Id
	@GeneratedValue(generator = "generator")

	@Column(name = "user_id", unique = true, nullable = false)
	public int getUserId() {
		return this.userId;
	}

	public void setUserId(int userId) {
		this.userId = userId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "company_id", nullable = false)
	public Company getCompany() {
		return this.company;
	}

	public void setCompany(Company company) {
		this.company = company;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "administrative", nullable = false)
	public boolean isAdministrative() {
		return this.administrative;
	}

	public void setAdministrative(boolean administrative) {
		this.administrative = administrative;
	}

	@Column(name = "primary", nullable = false)
	public boolean isPrimary() {
		return this.primary;
	}

	public void setPrimary(boolean primary) {
		this.primary = primary;
	}

	@Column(name = "billing", nullable = false)
	public boolean isBilling() {
		return this.billing;
	}

	public void setBilling(boolean billing) {
		this.billing = billing;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "lastmodified_date", length = 19)
	public Date getLastmodifiedDate() {
		return this.lastmodifiedDate;
	}

	public void setLastmodifiedDate(Date lastmodifiedDate) {
		this.lastmodifiedDate = lastmodifiedDate;
	}

}
